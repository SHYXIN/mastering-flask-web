========================================================================
Project Name: Online Personnel Counselling System (OPCS) - a testable version
Author: Sherwin John C. Tragura
Description: This non-standard version of the ch01 project removes the use of the __main__ object that resolves the circular import errors when importing view functions. The pytest module encounters disjunct when testing components imported using the __main__ object at testing mode. Thus, this approach uses the create_index_routes() method to encompass all the views and enable their import in the main.py module for testing and runtime execution without a circular import problem.
========================================================================

A. Project Directory

---ch01 (main project directory)
   --- config - contains the decorator for database connectivity 
              - by default, all db details are sifted from the .env file
   --- pages - contains the Jinja templates for the contents and error pages
   --- repository - contains the database transactions using native psycopg2 driver 
   --- services - contains other Python transactions that utilize the repository for 
                  generate the proper response
   --- views - contains the Flask view functions showcasing different implementations 
               of managing request and response data
   --- converter - contains implementation for custom API types for Path variable types

   --- __init__.py file - contains the import that settles the circular import error when importing views in main.py

   --- main.py - the main module containing the Flask app instance and the setup initialization

   --- tests - the pytest folder containing test files for testing Flask components



B. Configuration files (choose only one)
    .env - the default configuration file
    .config.toml - configuration variables written in TOML (i.e., configure main.py to replace .env)
    .config.json - configuration variables written in JSON (i.e., configure main.py to replace .env)
    myconfig.py - configuration variables written using Python syntax (i.e., configure main.py to replace .env)

C. Database Configurations
   db_ dump - contains the the opcs.sql dump file, which contains dummy test data
            - database platform is PostgreSQL 

D. Dependencies
   --- Create a python virtual env (e.g., ch01-env) using venv module first before running the dependency file.
   --- requirements.txt - contains the updates modules just run it inside your venv directory using:
                          python -m pip install -r requirements.txt --upgrade


Running the application:
   Run the command python main.py inside the enabled ch01-env.
