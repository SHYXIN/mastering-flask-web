========================================================================
Project Name: Online Grocery Application (OGA)
Author: Sherwin John C. Tragura
Description: This prototype is a small-scale API-based e-commerce application 
       for a grocery store. It has the typical ordering, purchasing, inventory, 
       and user management modules.

      The application will run on an Apache HTTP server as a standard Flask
      application.

      The application uses the Blueprint and Application Factory design approaches in managing its source codes and directories..
========================================================================

A. Project Directory
--- ch11-apache (main project directory)
      --- app  - contains all the modules and their respective components, 
                        such API endpoint functions, repository, and services
               - contains the model directory that contains database 
                 configuration and model classes of the Peewee ORM
               - contains the __init__.py file which is the heart of the
                 application
     
      --- main.py - imports the create_app() from app/__init__.py and manages the database connectivity
      --- wsgi - contains Apache Module (mod_wsgi) deployment files

B. Configuration files 
    --- config_dev.toml - configuration variables written in TOML for 

    
C. Database Configurations
   db_dump - contains the ogs.sql dump file, which contains dummy test data
           - database platform is PostgreSQL 

D. Dependencies
   --- Create a Python virtual env (e.g., ch11-apache-env) using the venv module first before running the dependency files
   --- requirements.txt - contains the updated modules just run it inside your venv directory using:
                  python -m pip install -r requirements.txt

E. Running the application:
   --- Generate first the PostgreSQL table schema using the following Peewee-Migrations commands:
         1. pem init
         2. pem add app.models.db.Login
            pem add app.models.db.Administrator
            pem add app.models.db.Category
            ...
            ...
         2. pem watch
         3. pem migrate
          
   --- Start the HTTP Apache server and access all the APIs.
       No need to run the python command.